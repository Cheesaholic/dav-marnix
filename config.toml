# General settings (can be overwritten in file specific configs below)
[ settings ]
# Logs to sys.stderr and logs/logs.log
logging_level = "INFO" # Available levels: ["TRACE", "DEBUG", "INFO", "SUCCESS", "WARNING", "ERROR", "CRITICAL"]

raw = "data/raw"
processed = "data/processed"
models = "models"
img = "img"

# Column name for processing messages
message_col = "message"
# Column name for authors
author_col = "author"
# Column name for timestamps
timestamp_col = "timestamp"


# Les 2
[ full_stopping_and_thinking ]
uber_suptitle = "Familieleden hebben wÃ©l een punt..."
suptitle_parts = ["Personen in de familie-groepsapp zetten ","gemiddeld"," vaker {end_of_sentence_list} achter de laatste zin van lange berichten dan personen in de vrienden-groepsapp."]
suptitle_colors = ["none", "{mean_color}", "none"]
suptitle_parts_x = -0.07
title = "Elke bol stelt een individuele auteur voor. Lange berichten zijn gedefinieerd als berichten met minstens {min_tokens} woorden. Alleen auteurs met minimaal {min_long_messages} lange berichten zijn meegenomen."
xlabel = "Percentage lange berichten eindigend op {end_of_sentence_list}"
percentage = "xaxis"
annotation_y_offset = -0.2
annotation_location_highest_lowest = "lowest"
annotation_location_x_y = "x"
annotation_fontweight = "bold"
ylabel = ""
hide_axis = "yaxis"
mean_color = "#808080"
mean_alpha = 0.5
markers = ['s', '^', ".", "p", "*"] # https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers
marker_size = 10

# Enter any input.<name> you want and as many as you like!
input.familie = "family.parq"
input.vrienden = "friends.csv"

min_tokens = 20
min_long_messages = 10
end_of_sentence_list = [".", "!", "?"]


# Les 3
[ worstenbroodjes ]
# Enter Wikipedia API-link or DataFrame object with any input.<name> you like
input.wikipedia_api = "https://wikimedia.org/api/rest_v1/metrics/pageviews/per-article/nl.wikipedia.org/all-access/user/Brabants_worstenbroodje/daily/20230131/20250105"
api_data_col = "views"
api_dt_format = "%Y%m%d%H"
request_headers = { 'User-Agent' = 'Marn-X/0.1 (marnix.ober@student.hu.nl)'}
json_nests = ["items"]
aggregation_frequency = "W-MON" # Week, starting on Monday

holidays = [{"name" = "Carnaval", "year" = 2023, "start" = 2023-02-19, "end" = 2023-02-21, "color" = "#ff4d01", "alpha" = 0.3},
            {"name" = "Carnaval", "year" = 2024, "start" = 2024-02-11, "end" = 2024-02-13, "color" = "#ff4d01", "alpha" = 0.3},
            {"name" = "Kerstdagen", "year" = 2023, "start" = 2023-12-25, "end" = 2024-01-01, "color" = "#008000", "alpha" = 0.3},
            {"name" = "Kerstdagen", "year" = 2024, "start" = 2024-12-25, "end" = 2025-01-01, "color" = "#008000", "alpha" = 0.3}]
annotations = [{"text" = "<-- Peter Gillis (bekend van het eten van worstenbroodjes)\n      veroordeeld voor belastingfraude.", "x" = 2024-02-28, "y" = "ANNOT_Y"}]
annotation_x_offset = 0.05
annotation_fontweight = "normal"

fourier_components = 1
fourier_color = "#0000FF"
fourier_alpha = 0.2
fourier_col = "fourier"

data_color = "#444444"
linewidth = 3
date_format_xaxis = '%b %Y'
xlabel = ""
ylabel = "Pagina-bezoeken\nper week"
hide_axis_label = "both"
uber_suptitle = "Helemaal 'foxwild' van worstenbroodjes tijdens feestdagen..."
title = "Worstenbroodjes worden in Brabant traditioneel tijdens deze feestdagen gegeten.\nWikipedia's 'pageviews' API gebruikt voor data. Fourier-transform gebruikt met {fourier_components} Fourier-component."
title_y = 1.01
suptitle_parts = ["Wikipedia-pagina voor ", "Brabantse worstenbroodjes", "populair rond ", "Carnaval", " en ", "kerstdagen.", "  ", "Fourier", " laat seizoensgebondenheid zien"]
suptitle_colors = ["none", "{data_color}", "none", "#ff4d01", "none", "#008000", "none", "{fourier_color}", "none"]
suptitle_y = 1.13

# Les 4
[ interpunctuality ]
# Enter 2 input.<name> instances below. Repeat these names in the input_settings
input.familie = "family.parq"
input.vrienden = "friends.csv"

input_settings.familie.type = "norm"
input_settings.familie.color = "blue"

input_settings.vrienden.type = "halfnorm"
input_settings.vrienden.color = "green"

norm_alpha = 1
linewidth = 2
hist_alpha = 0.5

# Default regex only counts 1 piece of interpunction when repeated (ex: len(?????) = 1)
interpunction_regex = '(?!(\.|\?|,|!)*\1{1,})(\.|\?|,|!)+'
word_regex = '\b\w+\b'

min_words = 15
annotation_x_offset = 0.05

uber_suptitle = "Komma's zijn voor boomers..."
suptitle_parts = ["Distributie interpunctiegebruik tussen","vrienden-"," en  ", "familiegroepsapp", " erg verschillend. Twee losse populaties zichtbaar."]
suptitle_colors = ["none", "green", "none", "blue", "none"]
title = '''Omdat de data deels normaal en deels niet-normaal verdeeld is, zijn non-parametrische toetsen gebruikt.
Mannâ€“Whitney U-test p-waarde: {p_value_mw}, Kolmogorovâ€“Smirnov-test p-waarde: {p_value_ks}.
Alleen lange berichten met minimaal {min_words} woorden zijn meegenomen. Interpunctie gedetecteerd met regex: {interpunction_regex}.'''
xlabel = "Aantal interpunctie-tekens per woord in berichten met {min_words} woorden of meer"
ylabel = "Waarschijnlijkheidsdichtheid"
suptitle_y = 1.16

# Les 5
[ congratulations ]
uber_suptitle = "'Hieperdepiep' van de jongeren: Felicitaties nemen met de jaren af."
suptitle_parts = ["Jongere familieleden feliciteren vaker dan oudere leden in groepsapp. Negatieve ", "trend", " te zien. Wisselend verschil tussen ", "mannen", " en ", "vrouwen", "."]
suptitle_colors = ["none", "grey", "none", "#00008B", "none", "#AA336A", "none"]
suptitle_parts_x = -0.1
suptitle_y = 1.18
title = """Het percentage is gebaseerd op het aantal verjaardagen dat een gebruiker sinds zijn of haar eerste bericht in de groepsapp heeft meegemaakt.
Een felicitatie wordt geteld als de gebruiker op een verjaardag een bericht stuurt dat overeenkomt met de RegEx: {congratulations_regex}.
De trendlijn is berekend met lineaire regressie (least squares-methode)."""
marker_size = 50
xlabel = "Leeftijd familielid"
ylabel = "Percentage gefeliciteerd"
percentage = "yaxis"

hue_label = "Gender"
hue_dict = {"Man" = "#00008B", "Vrouw" = "#AA336A"}

annotations = [{"text" = "â†‘\nNieuw lid van de familie. Heeft nog maar 8 verjaardagen meegemaakt i.p.v. â‰ˆ 50", "x" = "ANNOT_X", "y" = "ANNOT_Y"}]
annotation_y_offset = -3.0
annotation_x_offset = -0.2

# Enter as much DataFrame inputs (csv, parq, txt) as you like. Use any name you want.
input.chat = "family.parq"

# Enter hue and birthdate datasets with JSON. Key=author, val=hue/birthdate
input.hue = "family_genders.json"
input.birthdates = "family_birthdates.json"

min_messages = 10
birthday_dateformat = "%d-%m-%Y"
congratulations_regex = '(?ui)(gefelici|birthday|hbd|proficiat|ðŸŽ‰|ðŸ¥³|ðŸŽŠ)'
congratulations_flags = "ui"

# Les 6
[ family_group_chat_topics ]
uber_suptitle = "Wie niet reist, niest of jarig is, heeft weinig te vertellen in deze groepsapp..."
suptitle = "Familiegroepsapp vooral gebruikt voor status-updates. Onderwerpen: reizen, felicitaties, medisch, weer."
title = "Gespreksonderwerpen opgehaald met 'sentence-embedding'. Dimensionaliteit verkleind met UMAP. BERT-model: {bert_sentence_model}"
title_x = 0.53
title_y = 0.95
xlabel = "D1"
ylabel = "D2"
plotly_width = 1400
plotly_xref = "paper"

labels_nr_words = 3
labels_prefix = false
labels_word_length = false
labels_separator = "_"
labels_aspect = ""

# Set to false to train your own model!
use_pretrained_model = true
pretrained_model_name = "bertopic_markIII"

# Use input.chat, enter any dataset you like. Ensure text is in variable message_col.
input.chat = "family.parq"

# A list of stopwords is optional to better generate topics. If input contains multiple columns, the first column will be used as a list. Remove or comment out if not necessary.
input.stopwords = "https://raw.githubusercontent.com/stopwords-iso/stopwords-nl/refs/heads/master/stopwords-nl.txt"

# If applicable, a list of words (or names) that will be ignored for topics can be entered below. Case insensitive. Also takes Regex.
exclude_terms = ['marnix', 'nikki', 'diane', 'jaap', 'gerrit', 'gytha', 'stefan', 'ruben', 'bente', 'marian', 'kees', 'opa', 'oma', "tante", "ome", 'mama?', 'papa?', 'yuki', 'charlie', 'charley', 'charly', 'moos', 'moosje', 'dikke', 'kus', 'knuffel']

bert_sentence_model = "NetherlandsForensicInstitute/robbert-2022-dutch-sentence-transformers"
language = "dutch"
sentence_regex = '([^\.!?]*[\.!?])'
sentence_min_token_len = 7

# Dimensionality reduction with UMAP - Settings
umap_neighbors = 15
umap_n_components = 5 # 5 works better than 2, for some reason
umap_min_dist = 0.0
umap_metric = "cosine"
umap_random_state = 42

# Clustering with HDBSCAN - Settings
hdbscan_min_cluster_size = 25
hdbscan_metric = "euclidean"
hdbscan_cluster_selection_method = "eom"
hdbscan_prediction_data = true

# Add representation model from Spacy
# Required command: python3 -m spacy download <model entered below>
# nl_core_news_sm is installed standard with uv sync
representation_model = 'nl_core_news_sm'

# Create topics with BERTopic - Settings
bertopic_top_n_words = 10
bertopic_verbose = true